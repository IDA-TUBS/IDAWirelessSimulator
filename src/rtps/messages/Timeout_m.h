//
// Generated file, do not edit! Created by opp_msgtool 6.0 from src/rtps/messages/Timeout.msg.
//

#ifndef __TIMEOUT_M_H
#define __TIMEOUT_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class Timeout;
/**
 * Class generated from <tt>src/rtps/messages/Timeout.msg:1</tt> by opp_msgtool.
 * <pre>
 * packet Timeout
 * {
 *     // ID of the reader the timeout is related to
 *     int id;
 *     int sequenceNumber;
 * }
 * </pre>
 */
class Timeout : public ::omnetpp::cPacket
{
  protected:
    int id = 0;
    int sequenceNumber = 0;

  private:
    void copy(const Timeout& other);

  protected:
    bool operator==(const Timeout&) = delete;

  public:
    Timeout(const char *name=nullptr, short kind=0);
    Timeout(const Timeout& other);
    virtual ~Timeout();
    Timeout& operator=(const Timeout& other);
    virtual Timeout *dup() const override {return new Timeout(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getId() const;
    virtual void setId(int id);

    virtual int getSequenceNumber() const;
    virtual void setSequenceNumber(int sequenceNumber);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Timeout& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Timeout& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline Timeout *fromAnyPtr(any_ptr ptr) { return check_and_cast<Timeout*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __TIMEOUT_M_H

