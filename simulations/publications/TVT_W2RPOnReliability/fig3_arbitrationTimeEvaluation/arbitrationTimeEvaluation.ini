#-----------------------------------------------------------------------------
[General]
description = Two hosts communicating wirelessly
network = simulations.networks.multipleSingleLink
seed-0-mt=732195
sim-time-limit = 3599.9999s
**.startTime = 0s     

# =================================================
# ============= Application layer =================
# =================================================

multipleSingleLink.numberApps = ${nA=8}

multipleSingleLink.camera*.numberWriterApps = 1  
multipleSingleLink.vehicle*.numberReaderApps = 1 


multipleSingleLink.camera*.rtpsAppWriter[*].sampleSize = 50000B
multipleSingleLink.camera*.rtpsAppWriter[*].samplePeriod = 100ms
multipleSingleLink.camera*.rtpsAppWriter[*].jitter = 0ms 
multipleSingleLink.camera*.rtpsAppWriter[*].offset = 0ms


# =================================================
# ============== Middleware layer =================
# =================================================

# RTPS module
multipleSingleLink.**.rtps.nbrApps = ${nA}
multipleSingleLink.**.rtps.nbrReadersPerApp = 1

# Special Config of first writer
multipleSingleLink.camera1.rtpsAppWriter[*].sampleSize = 5000B
multipleSingleLink.camera1.rtpsAppWriter[*].samplePeriod = 100ms
multipleSingleLink.camera1.rtps.writer[0].shaping = 10000us
multipleSingleLink.camera1.rtps.writer[0].fragmentSize = 852

# Writer configuration
multipleSingleLink.camera*.rtps.writer[0].typename = "WriterW2RP"
multipleSingleLink.camera*.rtps.writer[0].numberReaders = 3
multipleSingleLink.camera*.rtps.writer[0].fragmentSize = 852
multipleSingleLink.camera*.rtps.writer[0].shaping = ${sh=1000us}
multipleSingleLink.camera*.rtps.writer[0].deadline = 100ms
multipleSingleLink.camera*.rtps.writer[0].enableSeparateHBs = false
multipleSingleLink.camera*.rtps.writer[0].enableNackSuppression = false
multipleSingleLink.camera*.rtps.writer[0].timeout = ${$sh}
multipleSingleLink.camera*.rtps.writer[0].nackSuppressionDuration = ${2*$sh + $rd}


multipleSingleLink.camera1.rtps.writer[0].appID = 0
multipleSingleLink.camera2.rtps.writer[0].appID = 1
multipleSingleLink.camera3.rtps.writer[0].appID = 2
multipleSingleLink.camera4.rtps.writer[0].appID = 3
multipleSingleLink.camera5.rtps.writer[0].appID = 4
multipleSingleLink.camera6.rtps.writer[0].appID = 5
multipleSingleLink.camera7.rtps.writer[0].appID = 6
multipleSingleLink.camera8.rtps.writer[0].appID = 7



# Reader configuration
multipleSingleLink.vehicle*.rtps.reader[0].typename = "Reader"
multipleSingleLink.vehicle*.rtps.reader[0].deadline = 100ms
# 500s takes out the backchannel
multipleSingleLink.vehicle*.rtps.reader[0].readerResponseDelay = ${rd = 500s}


multipleSingleLink.vehicle1.rtps.reader[0].appID = 0
multipleSingleLink.vehicle2.rtps.reader[0].appID = 1
multipleSingleLink.vehicle3.rtps.reader[0].appID = 2
multipleSingleLink.vehicle4.rtps.reader[0].appID = 3
multipleSingleLink.vehicle5.rtps.reader[0].appID = 4
multipleSingleLink.vehicle6.rtps.reader[0].appID = 5
multipleSingleLink.vehicle7.rtps.reader[0].appID = 6
multipleSingleLink.vehicle8.rtps.reader[0].appID = 7




# =================================================
# ================ Connectivity ===================
# =================================================

multipleSingleLink.**.inetAdapter.interfaceTableModule = ""

# Writer
multipleSingleLink.camera*.rtps.inetAdapter.localPort = 200
multipleSingleLink.camera*.rtps.inetAdapter.destPort = 100

*.camera1.rtps.writer[0].destAddresses = "vehicle1"
*.camera2.rtps.writer[0].destAddresses = "vehicle2"
*.camera3.rtps.writer[0].destAddresses = "vehicle3"
*.camera4.rtps.writer[0].destAddresses = "vehicle4"
*.camera5.rtps.writer[0].destAddresses = "vehicle5"
*.camera6.rtps.writer[0].destAddresses = "vehicle6"
*.camera7.rtps.writer[0].destAddresses = "vehicle7"
*.camera8.rtps.writer[0].destAddresses = "vehicle8"

# Reader
multipleSingleLink.vehicle*.rtps.inetAdapter.localPort = 100 
multipleSingleLink.vehicle*.rtps.inetAdapter.destPort = 200



*.vehicle1.rtps.reader[0].destAddresses = "camera1"
*.vehicle2.rtps.reader[0].destAddresses = "camera2"
*.vehicle3.rtps.reader[0].destAddresses = "camera3"
*.vehicle4.rtps.reader[0].destAddresses = "camera4"
*.vehicle5.rtps.reader[0].destAddresses = "camera5"
*.vehicle6.rtps.reader[0].destAddresses = "camera6"
*.vehicle7.rtps.reader[0].destAddresses = "camera7"
*.vehicle8.rtps.reader[0].destAddresses = "camera8"


# =================================================
# ================== IP Layer =====================
# =================================================

*.**.ipv4.arp.typename = "GlobalArp"
*.**.forwarding = true


# =================================================
# ================= MAC - Layer ===================
# =================================================

multipleSingleLink.**.wlan[0].typename = "WirelessInterface"
multipleSingleLink.**.wlan[0].mac.typename = "CsmaCaMacModified"
multipleSingleLink.**.wlan[0].queue.typename = "DropTailQueue"

multipleSingleLink.**.wlan[0].queue.packetCapacity = 100
multipleSingleLink.**.wlan[0].mac.bitErrorRate = ${0}

# MAC retreansmissions
*.**.wlan[0].mac.useAck = false
*.**.wlan[*].mac.retryLimit = 0

# CSMA/CA configuration
multipleSingleLink.**.wlan[0].mac.sifsTime = 10us
multipleSingleLink.**.wlan[0].mac.slotTime = 9us

multipleSingleLink.**.wlan[0].mac.ta_enable = true
multipleSingleLink.**.wlan[0].mac.ta = ${25}

# ======================================================
# ================= Physical - Layer ===================
# ======================================================


multipleSingleLink.**.wlan[0].**.bitrate = 27Mbps

*.**.wlan[0].radio.typename = "UnitDiskRadio"
*.**.wlan[0].radio.transmitter.communicationRange = 1000m
*.**.wlan[0].radio.receiver.ignoreInterference = true
*.**.wlan[0].radio.transmitter.interferenceRange = 1000m
*.**.wlan[0].radio.displayInterferenceRange = false
*.**.wlan[0].radio.displayCommunicationRange = false

# ==================================================
# ================== Recording =====================
# ==================================================
multipleSingleLink.camera1.wlan[0].mac.enableArbitrationTimeStats = true
multipleSingleLink.camera1.wlan[0].mac.enablePacketQueuingStats = false
multipleSingleLink.camera1.wlan[0].mac.enableSingleArbitrationTimeStats = true

multipleSingleLink.camera1.wlan[*].**.vector-recording = true
multipleSingleLink.camera1.wlan[*].**.scalar-recording = true

*.**.wlan[*].**.scalar-recording = false
*.**.wlan[*].**.vector-recording = false
*.**.udp.**.scalar-recording = false
*.**.udp.**.vector-recording = false
*.**.ipv4.**.statistic-recording = false



# =======================================
# ============= Visualizer ==============
# =======================================
*.visualizer.mediumVisualizer.displaySignals = false

*.visualizer.physicalLinkVisualizer.displayLinks = true
*.visualizer.physicalLinkVisualizer.packetFilter = "UDPData*"

*.visualizer.*LinkVisualizer.lineShift = 0

*.visualizer.dataLinkVisualizer.packetFilter = ""
*.visualizer.dataLinkVisualizer.displayLinks = true

*.visualizer.networkRouteVisualizer.displayRoutes = true
*.visualizer.networkRouteVisualizer.lineShift = 0
*.visualizer.networkRouteVisualizer.packetFilter = "UDPData*"

*.visualizer.sceneVisualizer.descriptionFigure = "title"

# =======================================
# ============ Configurator =============
# =======================================

*.configurator.config = xmldoc("config.xml")
*.configurator.optimizeRoutes = false
