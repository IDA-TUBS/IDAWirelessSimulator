#-----------------------------------------------------------------------------
[General]
description = Two hosts communicating wirelessly
network = simulations.examples.simpleW2RPSingleLink.singleLink
seed-0-mt=732195
sim-time-limit = 100s





# =============================================
# ============= configuration =================
# =============================================
**.rtps.nbrReadersPerApp = 1

*.hostA.rtps.nbrApps = 1
*.hostA.rtps.nbrWriters = 1
*.hostA.rtps.nbrReaders = 0
*.hostA.rtps.writer[0].destAddresses = "hostB"


*.hostB.rtps.nbrApps = 0
*.hostB.rtps.nbrWriters = 0
*.hostB.rtps.nbrReaders = 1
*.hostB.rtps.reader[1].destAddresses = "hostA"

*.hostA.rtps.writer[0].appID = 0
*.hostA.rtps.writer[0].numberReaders = 1

*.hostB.rtps.reader[0].appID = 0
#*.hostB.rtps.reader[0].

#### Relevant for the experiment ###
#*.host*.wlan[*].mac.bit_error_rate =  ${0,0.0000314,0.0000718}
*.**.**.bit_error_rate  = 0.0001
#*.**.writer[*].bit_error_rate  = 0.00004
#*.host*.wlan[*].mac.bit_error_rate = 0.00004 # 24.76%: Einstellung aus Journal
#*.host*.wlan[*].mac.bit_error_rate =  ${0,0.0000314,0.0000718}

# Zeigen, wie die efficiency abnimmt?


####################################

#### Application layer ####
#*.**.sample_size = ${ss = 4000B, 8000B, 12000B, 16000B, 20000B,30000B,40000B}
*.**.sample_size = ${ss = 20000}
*.**.sample_period = ${$ss/200*1ms}
*.**.sample_deadline = ${$ss/200*1ms}

#### W2RP incl. analysis####
*.**.fragment_size = 741
*.**.shaping_us = ${sh = 1300us} #,1200us, 1600us} # TODO shaping higher/lower?
*.**.srtt = ${2*$sh + 500us}
*.**.delay = 500us
*.**.shaper.enabled = false
*.**.history_qos = 2


# Violation detection
*.**.only_use_pessimistic_detection_condition = false
*.**.detection_granularity = 1000us
*.**.enable_break_after_violation_detection = false
# Adaptive
*.**.b = 0
*.**.writer[*].enable_adaptive_rtt_shaping = false

# DDS
*.**.original_dds = false
*.**.hb_period = 5000us

##### MAC Layer ####
*.host*.wlan[0].mac.useAck = false
*.host*.wlan[*].mac.retryLimit = 0
*.host*.wlan[0].mac.queue.packetCapacity = 100
# CSMA values Static for all
*.host*.**.bitrate = 27Mbps
#  100: 22
#  200: 44
#  300: 67
#  400: 89
#  500: 111
#  600: 133
#  700: 156
#  800: 178
#  900: 200
# 1000: 222
# 1055: 234
# 1100: 244
# 1200: 267
# 1300: 289
# 1400: 311
# 1500: 333
# 1600: 356
# 1700: 378
*.host*.wlan[0].mac.ta = 222
*.host*.wlan[0].mac.ta_enable = true
#*.host*.wlan[0].mac.cwMin = 82
#*.host*.wlan[0].mac.cwMax = 82
*.host*.wlan[0].mac.sifsTime = 14us
*.host*.wlan[0].mac.slotTime = 9us




##### Physical Channel ####
# 0		: 0
# 10^-5.5	: 0.000003162
# 10^-5.25	: 0.000005623
# 10^-5		: 0.00001
# 10^-4.75	: 0.000017783
# 10^-4.5	: 0.000031623
# 10^-4.25	: 0.000056234
# 10^-4		: 0.0001
# 10^-3.75	: 0.000177828
# 10^-3.5       : 0.000316228

# 0	: 0
# 10	: 0.000014
# 20	: 0.0000296
# 30	: 0.0000475
# 40	: 0.000068
# 50	: 0.000092
# 60	: 0.000122
# 70	: 0.00016
# 80	: 0.000214
# 90	: 0.000306
# 100	: 1
#*.host*.wlan[*].mac.bit_error_rate =  ${0,0.000014,0.0000296,0.0000475,0.000068,0.000092,0.000122,0.00016,0.000214,0.000306}

# =======================================
# ============= overall =================
# =======================================

**.startTime = 0s     # start time
# Recording
*.host*.wlan[*].**.scalar-recording = false
*.host*.wlan[*].**.vector-recording = false
*.host*.udp.**.scalar-recording = false
*.host*.udp.**.vector-recording = false
*.host*.ipv4.**.statistic-recording = false

# Connectivity Middleware layer

# Camera
*.hostA.rtps_app_writer[*].typename = "RtpsPublisherApp"
*.hostA.rtps_app_reader[*].typename = "RtpsSubscriberApp"
*.hostA.nbr_read_apps = 0
*.hostA.nbr_write_apps = 1
#*.hostA.rtps.nbrWriters = 1
#*.hostA.rtps.nbrReaders = 0
*.hostA.rtps.inetAdapter.interfaceTableModule = ""

# Car
*.hostB.rtps_app_writer[*].typename = "RtpsPublisherApp"
*.hostB.rtps_app_reader[*].typename = "RtpsSubscriberApp"
*.hostB.nbr_read_apps = 1
*.hostB.nbr_write_apps = 0
*.hostB.rtps.inetAdapter.interfaceTableModule = ""

# Connectivity IP layer

# ---> camera
*.hostA.rtps.inetAdapter.localPort = 200
*.hostA.rtps.inetAdapter.destPort = 100
*.hostA.rtps.inetAdapter.destAddresses = "hostB"
*.hostA.rtps.inetAdapter.localAddress = "hostA"

# ---> car
*.hostB.rtps.inetAdapter.localPort = 100 
*.hostB.rtps.inetAdapter.destPort = 200
*.hostB.rtps.inetAdapter.destAddresses = "hostA"
*.hostB.rtps.inetAdapter.localAddress = "hostB"


# IP layer

*.host*.ipv4.arp.typename = "GlobalArp"
*.host*.forwarding = true

# MAC layer

*.host*.wlan[0].typename = "WirelessInterface"
*.host*.wlan[0].mac.typename = "CsmaCaMac_mod6"
*.host*.wlan[0].queue.typename = "DropTailQueue"


#*.host*.wlan[0].mac.headerLength = 23B
#*.host*.wlan[0].mac.ackTimeout = 300us
#*.host*.wlan[0].mac.bitrate = 54Mbps

# Phyical channel (radio)

*.host*.wlan[0].radio.typename = "UnitDiskRadio"
*.host*.wlan[0].radio.transmitter.communicationRange = 500m
*.host*.wlan[0].radio.receiver.ignoreInterference = true
*.host*.wlan[0].radio.transmitter.interferenceRange = 500m
*.hostA.wlan[0].radio.displayInterferenceRange = false
*.hostA.wlan[0].radio.displayCommunicationRange = false

# =======================================
# ============= Visualizer ==============
# =======================================
*.visualizer.mediumVisualizer.displaySignals = false

*.visualizer.physicalLinkVisualizer.displayLinks = true
*.visualizer.physicalLinkVisualizer.packetFilter = "UDPData*"

*.visualizer.*LinkVisualizer.lineShift = 0

*.visualizer.dataLinkVisualizer.packetFilter = ""
*.visualizer.dataLinkVisualizer.displayLinks = true

*.visualizer.networkRouteVisualizer.displayRoutes = true
*.visualizer.networkRouteVisualizer.lineShift = 0
*.visualizer.networkRouteVisualizer.packetFilter = "UDPData*"

*.visualizer.sceneVisualizer.descriptionFigure = "title"

# =======================================
# ============ Configurator =============
# =======================================

*.configurator.config = xml("<config><interface hosts='**' address='10.0.0.x' netmask='255.255.255.0'/><autoroute metric='errorRate'/></config>")
*.configurator.optimizeRoutes = false



